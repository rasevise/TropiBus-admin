"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var db = require("../db/pg");
var createAdmin = 'INSERT INTO administrator(admin_first_name, admin_last_name, admin_username, admin_password) VALUES ($1,$2,$3,$4)';
var getAdmin = 'SELECT * FROM administrator WHERE admin_id=$1';
var updateAdmin = 'UPDATE administrator SET admin_first_name=$1, admin_last_name=$2 WHERE admin_id=$3';
var setPassword = 'UPDATE administrator SET admin_password=$1, admin_pass=$2 WHERE admin_id=$3';
var updatePassword = 'UPDATE administrator SET admin_password=$1, admin_pass=$2 WHERE admin_id=$3 AND admin_password=$4';
function register(app) {
    var admin;
    app.get('/register/getAdmin', function (req, res, next) {
        res.contentType('application/json');
        db.query(getAdmin, [req.query.id], function (err, result) {
            if (err) {
                console.error(err);
                result.send('Error ' + err);
            }
            else {
                res.json(result.rows[0]);
            }
        });
    });
    app.post("/register", function (req, res) {
        db.query(createAdmin, [req.body.name, req.body.last, req.body.username, req.body.password], function (err, result) {
            if (err) {
                console.error(err.code);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
    app.put("/register/update", function (req, res) {
        db.query(updateAdmin, [req.body.name, req.body.last, req.body.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result.rows);
            }
        });
    });
    app.put("/register/setPassword", function (req, res) {
        db.query(setPassword, [req.body.password, false, req.body.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
    app.put("/register/updatePassword", function (req, res) {
        db.query(updatePassword, [req.body.password, false, req.body.id, req.body.oldpassword], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
}
exports.register = register;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QixDQUFDO1lBQUEsSUFBSSxDQUFDLENBQUM7Z0JBQ0gsR0FBRyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyQixDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztBQUVILENBQUM7QUE1REQsNEJBNERDIiwiZmlsZSI6InNlcnZpY2VzL3JlZ2lzdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0ICogYXMgZGIgZnJvbSAnLi4vZGIvcGcnO1xyXG5cclxudmFyIGNyZWF0ZUFkbWluID0gJ0lOU0VSVCBJTlRPIGFkbWluaXN0cmF0b3IoYWRtaW5fZmlyc3RfbmFtZSwgYWRtaW5fbGFzdF9uYW1lLCBhZG1pbl91c2VybmFtZSwgYWRtaW5fcGFzc3dvcmQpIFZBTFVFUyAoJDEsJDIsJDMsJDQpJztcclxudmFyIGdldEFkbWluPSAnU0VMRUNUICogRlJPTSBhZG1pbmlzdHJhdG9yIFdIRVJFIGFkbWluX2lkPSQxJztcclxudmFyIHVwZGF0ZUFkbWluID0gJ1VQREFURSBhZG1pbmlzdHJhdG9yIFNFVCBhZG1pbl9maXJzdF9uYW1lPSQxLCBhZG1pbl9sYXN0X25hbWU9JDIgV0hFUkUgYWRtaW5faWQ9JDMnO1xyXG52YXIgc2V0UGFzc3dvcmQgPSAnVVBEQVRFIGFkbWluaXN0cmF0b3IgU0VUIGFkbWluX3Bhc3N3b3JkPSQxLCBhZG1pbl9wYXNzPSQyIFdIRVJFIGFkbWluX2lkPSQzJztcclxudmFyIHVwZGF0ZVBhc3N3b3JkID0gJ1VQREFURSBhZG1pbmlzdHJhdG9yIFNFVCBhZG1pbl9wYXNzd29yZD0kMSwgYWRtaW5fcGFzcz0kMiBXSEVSRSBhZG1pbl9pZD0kMyBBTkQgYWRtaW5fcGFzc3dvcmQ9JDQnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyKGFwcDogZXhwcmVzcy5BcHBsaWNhdGlvbikge1xyXG52YXIgYWRtaW47XHJcblxyXG5hcHAuZ2V0KCcvcmVnaXN0ZXIvZ2V0QWRtaW4nLCAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICAgIHJlcy5jb250ZW50VHlwZSgnYXBwbGljYXRpb24vanNvbicpO1xyXG4gICAgZGIucXVlcnkoZ2V0QWRtaW4sIFtyZXEucXVlcnkuaWRdLCAoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgICAgICByZXN1bHQuc2VuZCgnRXJyb3IgJyArIGVycik7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQucm93c1swXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuLy9NZXRob2QgdG8gdmFsaWRhdGUgTG9naW4gaW5mbyB3aXRoIGRiXHJcbmFwcC5wb3N0KGAvcmVnaXN0ZXJgLCAocmVxOmFueSwgcmVzOmFueSkgPT4ge1xyXG4gIGRiLnF1ZXJ5KGNyZWF0ZUFkbWluLFtyZXEuYm9keS5uYW1lLCByZXEuYm9keS5sYXN0LCByZXEuYm9keS51c2VybmFtZSwgcmVxLmJvZHkucGFzc3dvcmRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLmNvZGUpO1xyXG4gICAgICAgIHJlcy5zZW5kKGVyci5jb2RlKTtcclxuICAgIH1lbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnB1dChgL3JlZ2lzdGVyL3VwZGF0ZWAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeSh1cGRhdGVBZG1pbixbcmVxLmJvZHkubmFtZSwgcmVxLmJvZHkubGFzdCwgcmVxLmJvZHkuaWRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpeyBcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOyByZXMuc2VuZChlcnIpOyBcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyLmNvZGUpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoYC9yZWdpc3Rlci9zZXRQYXNzd29yZGAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeShzZXRQYXNzd29yZCxbcmVxLmJvZHkucGFzc3dvcmQsIGZhbHNlLCByZXEuYm9keS5pZF0gLChlcnI6YW55LCByZXN1bHQ6YW55KSA9PiB7XHJcbiAgICAgICAgaWYgKGVycil7IFxyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7IHJlcy5zZW5kKGVycik7IFxyXG4gICAgICAgICAgICByZXMuc2VuZChlcnIuY29kZSk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoYC9yZWdpc3Rlci91cGRhdGVQYXNzd29yZGAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeSh1cGRhdGVQYXNzd29yZCxbcmVxLmJvZHkucGFzc3dvcmQsIGZhbHNlLCByZXEuYm9keS5pZCwgcmVxLmJvZHkub2xkcGFzc3dvcmRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpeyBcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOyByZXMuc2VuZChlcnIpOyBcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyLmNvZGUpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG59XHJcbiJdfQ==
