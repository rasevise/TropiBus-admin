"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var db = require("../db/pg");
var createAdmin = 'INSERT INTO administrator(admin_first_name, admin_last_name, admin_username, admin_password) VALUES ($1,$2,$3,$4)';
var getAdmin = 'SELECT * FROM administrator WHERE admin_id=$1';
var updateAdmin = 'UPDATE administrator SET admin_first_name=$1, admin_last_name=$2 WHERE admin_id=$3';
var setPassword = 'UPDATE administrator SET admin_password=$1, admin_pass=$2 WHERE admin_id=$3';
var updatePassword = 'UPDATE administrator SET admin_password=$1, admin_pass=$2 WHERE admin_id=$3 AND admin_password=$4';
function register(app) {
    var admin;
    app.get('/register/getAdmin', function (req, res, next) {
        res.contentType('application/json');
        db.query(getAdmin, [req.query.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
            }
            else {
                res.json(result.rows[0]);
            }
        });
    });
    app.post("/register", function (req, res) {
        db.query(createAdmin, [req.body.name, req.body.last, req.body.username, req.body.password], function (err, result) {
            if (err) {
                console.error(err.code);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
    app.put("/register/update", function (req, res) {
        db.query(updateAdmin, [req.body.name, req.body.last, req.body.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result.rows);
            }
        });
    });
    app.put("/register/setPassword", function (req, res) {
        db.query(setPassword, [req.body.password, false, req.body.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
    app.put("/register/updatePassword", function (req, res) {
        db.query(updatePassword, [req.body.password, false, req.body.id, req.body.oldpassword], function (err, result) {
            if (err) {
                console.error(err);
                res.send(err);
                res.send(err.code);
            }
            else {
                res.json(result);
            }
        });
    });
}
exports.register = register;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QSxJQUFJLENBQUMsQ0FBQztnQkFDSCxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3JCLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUMsQ0FBQyxDQUFDO0FBRUgsQ0FBQztBQTVERCw0QkE0REMiLCJmaWxlIjoic2VydmljZXMvcmVnaXN0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5pbXBvcnQgKiBhcyBkYiBmcm9tICcuLi9kYi9wZyc7XHJcblxyXG52YXIgY3JlYXRlQWRtaW4gPSAnSU5TRVJUIElOVE8gYWRtaW5pc3RyYXRvcihhZG1pbl9maXJzdF9uYW1lLCBhZG1pbl9sYXN0X25hbWUsIGFkbWluX3VzZXJuYW1lLCBhZG1pbl9wYXNzd29yZCkgVkFMVUVTICgkMSwkMiwkMywkNCknO1xyXG52YXIgZ2V0QWRtaW49ICdTRUxFQ1QgKiBGUk9NIGFkbWluaXN0cmF0b3IgV0hFUkUgYWRtaW5faWQ9JDEnO1xyXG52YXIgdXBkYXRlQWRtaW4gPSAnVVBEQVRFIGFkbWluaXN0cmF0b3IgU0VUIGFkbWluX2ZpcnN0X25hbWU9JDEsIGFkbWluX2xhc3RfbmFtZT0kMiBXSEVSRSBhZG1pbl9pZD0kMyc7XHJcbnZhciBzZXRQYXNzd29yZCA9ICdVUERBVEUgYWRtaW5pc3RyYXRvciBTRVQgYWRtaW5fcGFzc3dvcmQ9JDEsIGFkbWluX3Bhc3M9JDIgV0hFUkUgYWRtaW5faWQ9JDMnO1xyXG52YXIgdXBkYXRlUGFzc3dvcmQgPSAnVVBEQVRFIGFkbWluaXN0cmF0b3IgU0VUIGFkbWluX3Bhc3N3b3JkPSQxLCBhZG1pbl9wYXNzPSQyIFdIRVJFIGFkbWluX2lkPSQzIEFORCBhZG1pbl9wYXNzd29yZD0kNCc7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXIoYXBwOiBleHByZXNzLkFwcGxpY2F0aW9uKSB7XHJcbnZhciBhZG1pbjtcclxuXHJcbmFwcC5nZXQoJy9yZWdpc3Rlci9nZXRBZG1pbicsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgcmVzLmNvbnRlbnRUeXBlKCdhcHBsaWNhdGlvbi9qc29uJyk7XHJcbiAgICBkYi5xdWVyeShnZXRBZG1pbiwgW3JlcS5xdWVyeS5pZF0sIChlcnI6YW55LCByZXN1bHQ6YW55KSA9PiB7XHJcbiAgICAgICAgaWYgKGVycikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICAgICAgICAgIHJlcy5zZW5kKGVycik7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQucm93c1swXSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuLy9NZXRob2QgdG8gdmFsaWRhdGUgTG9naW4gaW5mbyB3aXRoIGRiXHJcbmFwcC5wb3N0KGAvcmVnaXN0ZXJgLCAocmVxOmFueSwgcmVzOmFueSkgPT4ge1xyXG4gIGRiLnF1ZXJ5KGNyZWF0ZUFkbWluLFtyZXEuYm9keS5uYW1lLCByZXEuYm9keS5sYXN0LCByZXEuYm9keS51c2VybmFtZSwgcmVxLmJvZHkucGFzc3dvcmRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgaWYgKGVycikge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyLmNvZGUpO1xyXG4gICAgICAgIHJlcy5zZW5kKGVyci5jb2RlKTtcclxuICAgIH1lbHNlIHtcclxuICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgfVxyXG4gICAgfSk7XHJcbn0pO1xyXG5cclxuYXBwLnB1dChgL3JlZ2lzdGVyL3VwZGF0ZWAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeSh1cGRhdGVBZG1pbixbcmVxLmJvZHkubmFtZSwgcmVxLmJvZHkubGFzdCwgcmVxLmJvZHkuaWRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpeyBcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOyByZXMuc2VuZChlcnIpOyBcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyLmNvZGUpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0LnJvd3MpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoYC9yZWdpc3Rlci9zZXRQYXNzd29yZGAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeShzZXRQYXNzd29yZCxbcmVxLmJvZHkucGFzc3dvcmQsIGZhbHNlLCByZXEuYm9keS5pZF0gLChlcnI6YW55LCByZXN1bHQ6YW55KSA9PiB7XHJcbiAgICAgICAgaWYgKGVycil7IFxyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycik7IHJlcy5zZW5kKGVycik7IFxyXG4gICAgICAgICAgICByZXMuc2VuZChlcnIuY29kZSk7XHJcbiAgICAgICAgfWVsc2Uge1xyXG4gICAgICAgICAgICByZXMuanNvbihyZXN1bHQpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoYC9yZWdpc3Rlci91cGRhdGVQYXNzd29yZGAsIChyZXE6YW55LCByZXM6YW55KSA9PiB7XHJcbiAgICBkYi5xdWVyeSh1cGRhdGVQYXNzd29yZCxbcmVxLmJvZHkucGFzc3dvcmQsIGZhbHNlLCByZXEuYm9keS5pZCwgcmVxLmJvZHkub2xkcGFzc3dvcmRdICwoZXJyOmFueSwgcmVzdWx0OmFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpeyBcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpOyByZXMuc2VuZChlcnIpOyBcclxuICAgICAgICAgICAgcmVzLnNlbmQoZXJyLmNvZGUpO1xyXG4gICAgICAgIH1lbHNlIHtcclxuICAgICAgICAgICAgcmVzLmpzb24ocmVzdWx0KTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufSk7XHJcblxyXG59XHJcbiJdfQ==
