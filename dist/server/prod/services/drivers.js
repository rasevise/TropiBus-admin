"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var db = require("../db/pg");
function drivers(app) {
    var _driversURL = '/drivers';
    app.get(_driversURL, function (req, res, next) {
        console.log('getting messages from server: ');
        res.contentType('application/json');
        db.query('SELECT * FROM Driver ORDER BY driver_status, driver_firstname', null, function (err, results) {
            if (err) {
                console.error(err);
                res.send('Error ' + err);
            }
            res.json(results.rows);
        });
    });
    app.post(_driversURL + '/addDriver', function (req, res, next) {
        var status = 'not logged';
        console.log('password:' + req.body.password);
        db.query('INSERT INTO driver( driver_firstname, driver_lastname, driver_username, driver_password, driver_status) VALUES ($1,$2,$3,$4,$5)', [req.body.name, req.body.lastName, req.body.username, req.body.password, status], function (err, result) {
            if (err) {
                console.error(err);
                res.send('Error ' + err);
            }
            res.send(result);
        });
    });
    app.put(_driversURL + '/updateDriver', function (req, res, next) {
        db.query('UPDATE driver SET driver_firstname = $2, driver_lastname = $3,  driver_username = $4 WHERE driver_id = $1', [req.body.id, req.body.name, req.body.lastName, req.body.username], function (err, result) {
            if (err) {
                console.error(err);
                res.send('Error ' + err);
            }
            res.send(result);
        });
    });
    app.put(_driversURL + '/updatePassword', function (req, res, next) {
        db.query('UPDATE driver SET  driver_password = $2, admin_pass=$3 WHERE driver_id = $1', [req.body.id, req.body.password, true], function (err, result) {
            if (err) {
                console.error(err);
                res.send('Error ' + err);
            }
            res.send(result);
        });
    });
    app.delete(_driversURL + '/deleteDriver', function (req, res, next) {
        db.query('DELETE FROM driver WHERE driver_id = $1', [req.query.id], function (err, result) {
            if (err) {
                console.error(err);
                res.send('Error ' + err);
            }
            res.send(result);
        });
    });
}
exports.drivers = drivers;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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R0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLEVBQUUsVUFBQyxHQUFPLEVBQUUsTUFBVTtZQUNsSixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNILE9BQU8sQ0FBQyxLQUFLLENBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ25CLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLENBQUM7WUFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFHSCxHQUFHLENBQUMsTUFBTSxDQUFDLFdBQVcsR0FBRyxlQUFlLEVBQUUsVUFBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLElBQUk7UUFDdkQsRUFBRSxDQUFDLEtBQUssQ0FBQyx5Q0FBeUMsRUFBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEVBQUUsVUFBQyxHQUFPLEVBQUUsTUFBVTtZQUNyRixFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNILE9BQU8sQ0FBQyxLQUFLLENBQUUsR0FBRyxDQUFDLENBQUM7Z0JBQ25CLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1lBQ2pDLENBQUM7WUFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ25CLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFFSCxDQUFDO0FBM0RELDBCQTJEQyIsImZpbGUiOiJzZXJ2aWNlcy9kcml2ZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZXhwcmVzcyBmcm9tICdleHByZXNzJztcclxuaW1wb3J0ICogYXMgZGIgZnJvbSAnLi4vZGIvcGcnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGRyaXZlcnMoYXBwOiBleHByZXNzLkFwcGxpY2F0aW9uKSB7XHJcblxyXG5sZXQgX2RyaXZlcnNVUkwgPSAnL2RyaXZlcnMnO1xyXG5cclxuYXBwLmdldChfZHJpdmVyc1VSTCwgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ2dldHRpbmcgbWVzc2FnZXMgZnJvbSBzZXJ2ZXI6ICcpO1xyXG4gIHJlcy5jb250ZW50VHlwZSgnYXBwbGljYXRpb24vanNvbicpO1xyXG4gIGRiLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIERyaXZlciBPUkRFUiBCWSBkcml2ZXJfc3RhdHVzLCBkcml2ZXJfZmlyc3RuYW1lJywgbnVsbCwgKGVycjphbnksIHJlc3VsdHM6YW55KSA9PiB7XHJcbiAgICBpZihlcnIpIHtcclxuICAgICAgICAgICBjb25zb2xlLmVycm9yKCBlcnIpO1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgJyArIGVycik7XHJcbiAgICB9XHJcbiAgICByZXMuanNvbihyZXN1bHRzLnJvd3MpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wb3N0KF9kcml2ZXJzVVJMICsgJy9hZGREcml2ZXInLCAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICB2YXIgc3RhdHVzID0gJ25vdCBsb2dnZWQnO1xyXG4gIGNvbnNvbGUubG9nKCdwYXNzd29yZDonICsgcmVxLmJvZHkucGFzc3dvcmQpO1xyXG4gIGRiLnF1ZXJ5KCdJTlNFUlQgSU5UTyBkcml2ZXIoIGRyaXZlcl9maXJzdG5hbWUsIGRyaXZlcl9sYXN0bmFtZSwgZHJpdmVyX3VzZXJuYW1lLCBkcml2ZXJfcGFzc3dvcmQsIGRyaXZlcl9zdGF0dXMpIFZBTFVFUyAoJDEsJDIsJDMsJDQsJDUpJywgW3JlcS5ib2R5Lm5hbWUscmVxLmJvZHkubGFzdE5hbWUscmVxLmJvZHkudXNlcm5hbWUscmVxLmJvZHkucGFzc3dvcmQsIHN0YXR1c10sIChlcnI6YW55LCByZXN1bHQ6YW55KSA9PiB7XHJcbiAgICBpZihlcnIpIHtcclxuICAgICAgICAgICBjb25zb2xlLmVycm9yKCBlcnIpO1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgJyArIGVycik7XHJcbiAgICB9XHJcbiAgICByZXMuc2VuZChyZXN1bHQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbmFwcC5wdXQoX2RyaXZlcnNVUkwgKyAnL3VwZGF0ZURyaXZlcicsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gIGRiLnF1ZXJ5KCdVUERBVEUgZHJpdmVyIFNFVCBkcml2ZXJfZmlyc3RuYW1lID0gJDIsIGRyaXZlcl9sYXN0bmFtZSA9ICQzLCAgZHJpdmVyX3VzZXJuYW1lID0gJDQgV0hFUkUgZHJpdmVyX2lkID0gJDEnLCBbcmVxLmJvZHkuaWQsIHJlcS5ib2R5Lm5hbWUsIHJlcS5ib2R5Lmxhc3ROYW1lLCByZXEuYm9keS51c2VybmFtZV0sIChlcnI6YW55LCByZXN1bHQ6YW55KSA9PiB7XHJcbiAgICBpZiAoZXJyKSB7XHJcbiAgICAgICAgICAgY29uc29sZS5lcnJvciggZXJyKTtcclxuICAgICAgICAgICAgcmVzLnNlbmQoJ0Vycm9yICcgKyBlcnIpO1xyXG4gICAgfVxyXG4gICAgcmVzLnNlbmQocmVzdWx0KTtcclxuICB9KTtcclxufSk7XHJcblxyXG5hcHAucHV0KF9kcml2ZXJzVVJMICsgJy91cGRhdGVQYXNzd29yZCcsIChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gIGRiLnF1ZXJ5KCdVUERBVEUgZHJpdmVyIFNFVCAgZHJpdmVyX3Bhc3N3b3JkID0gJDIsIGFkbWluX3Bhc3M9JDMgV0hFUkUgZHJpdmVyX2lkID0gJDEnLCBbcmVxLmJvZHkuaWQsIHJlcS5ib2R5LnBhc3N3b3JkLCB0cnVlXSwgKGVycjphbnksIHJlc3VsdDphbnkpID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICBjb25zb2xlLmVycm9yKCBlcnIpO1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgJyArIGVycik7XHJcbiAgICB9XHJcbiAgICByZXMuc2VuZChyZXN1bHQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcblxyXG5hcHAuZGVsZXRlKF9kcml2ZXJzVVJMICsgJy9kZWxldGVEcml2ZXInLCAocmVxLCByZXMsIG5leHQpID0+IHtcclxuICBkYi5xdWVyeSgnREVMRVRFIEZST00gZHJpdmVyIFdIRVJFIGRyaXZlcl9pZCA9ICQxJyxbcmVxLnF1ZXJ5LmlkXSwgKGVycjphbnksIHJlc3VsdDphbnkpID0+IHtcclxuICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICBjb25zb2xlLmVycm9yKCBlcnIpO1xyXG4gICAgICAgICAgICByZXMuc2VuZCgnRXJyb3IgJyArIGVycik7XHJcbiAgICB9XHJcbiAgICByZXMuc2VuZChyZXN1bHQpO1xyXG4gIH0pO1xyXG59KTtcclxuXHJcbn1cclxuIl19
